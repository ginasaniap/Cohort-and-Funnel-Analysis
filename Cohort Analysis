-- COHORT ANALYSIS
WITH
cte_1 as (
 select DISTINCT -- to prevent doubled counting on 1 month
   owner_user_id as user_id,
   MIN(date_trunc(date(creation_date), MONTH)) OVER (PARTITION BY owner_user_id) as first_post_date, -- use window function and MIN() to get the first post of each users
   date_trunc(date(creation_date), MONTH) running_post_date -- the running creation date (including the first post)
 from `bigquery-public-data.stackoverflow.posts_questions`
)
-- SELECT *
-- FROM cte_1
-- ORDER BY cte_1.first_post_date
,cte_2 as (
 SELECT *
   ,DATE_DIFF(running_post_date, first_post_date, MONTH) diff_month -- difference between running post date to first post date to see the tenure (the repetitive of activity each month)
   ,COUNT(DISTINCT user_id) OVER (PARTITION BY first_post_date) cohort_size -- adding the grand total of each first_post_date total user as a divisor for each running month to get the percentage user that comback on that particular month
 FROM cte_1
)
-- SELECT *
-- FROM cte_2
,cte_3 AS (
 SELECT first_post_date
   ,diff_month month
   ,cohort_size
   ,COUNT(DISTINCT user_id) total_user
 FROM cte_2
 WHERE first_post_date >= '2020-01-01'
 GROUP BY 1,2,3
 ORDER BY 1,2
)
-- SELECT *
-- FROM cte_3
SELECT *
 ,total_user / cohort_size total_user_perc -- to get the percentage user over the cohort size
FROM cte_3
;

-- hypothesis 1
-- Decreasing activity in Active users in the same month cohort
with cohort_items_temp as (
  select
    owner_user_id as user_id,
  MIN(date(date_trunc(creation_date,MONTH))) as cohort_month,
  from `bigquery-public-data.stackoverflow.posts_questions`
  GROUP BY 1
)
-- SELECT *
-- FROM cohort_items_temp
, cohort_items as (
  select cohort_items_temp.*
  from cohort_items_temp
  left join `bigquery-public-data.stackoverflow.users` user
  on cohort_items_temp.user_id = user.id
  where cohort_month = date(date_trunc(user.creation_date,MONTH))
)
-- SELECT *
-- FROM cohort_items
, user_activities as (
  select
    act.owner_user_id as user_id,
  DATE_DIFF(
  date(date_trunc(creation_date,MONTH)),
    cohort.cohort_month,
    MONTH
) 
as month_number,
from `bigquery-public-data.stackoverflow.posts_questions` act
left join cohort_items cohort ON act.owner_user_id = cohort.user_id
where extract(year from cohort.cohort_month) in (2020,2021)
group by 1, 2
),
cohort_size as (
SELECT cohort_month,
count(1) as num_users
FROM cohort_items
GROUP BY 1
ORDER BY 1
),
retention_table as (
select
C.cohort_month,
A.month_number,
count(1) as num_users
from user_activities A
left join cohort_items C ON A.user_id = C.user_id
group by 1, 2
)
-- our final value: (cohort_month, size, month_number, percentage)
select
B.cohort_month,
S.num_users as cohort_size,
B.month_number,
B.num_users as total_users,
cast(B.num_users as decimal)/ S.num_users as percentage
from retention_table B
left join cohort_size S ON B.cohort_month = S.cohort_month
where B.cohort_month IS NOT NULL
order by 1, 3

;
-- hypothesis 2
-- Decreasing activity in cohort non-Active users in the same month
with cohort_items_temp as (
select
owner_user_id as user_id,
MIN(date(date_trunc(creation_date,MONTH))) as cohort_month,
from `bigquery-public-data.stackoverflow.posts_questions`
GROUP BY 1
),
cohort_items as (
select cohort_items_temp.*
from cohort_items_temp
left join `bigquery-public-data.stackoverflow.users` user
on cohort_items_temp.user_id = user.id
where cohort_month > date(date_trunc(user.creation_date,MONTH))
),
user_activities as (
select
act.owner_user_id as user_id,
DATE_DIFF(
date(date_trunc(creation_date,MONTH)),
cohort.cohort_month,
MONTH
) as month_number,
from `bigquery-public-data.stackoverflow.posts_questions` act
left join cohort_items cohort ON act.owner_user_id = cohort.user_id
where extract(year from cohort.cohort_month) in (2020,2021)
group by 1, 2
),
cohort_size as (
SELECT cohort_month,
count(1) as num_users
FROM cohort_items
GROUP BY 1
ORDER BY 1
),
retention_table as (
select
C.cohort_month,
A.month_number,
count(1) as num_users
from user_activities A
left join cohort_items C ON A.user_id = C.user_id
group by 1, 2
)
-- our final value: (cohort_month, size, month_number, percentage)
select
B.cohort_month,
S.num_users as cohort_size,
B.month_number,
B.num_users as total_users,
cast(B.num_users as decimal)/ S.num_users as percentage
from retention_table B
left join cohort_size S ON B.cohort_month = S.cohort_month
where B.cohort_month IS NOT NULL
order by 1, 3
;

-- hypotesis 3
-- The number of answerd questions has decreased after March 2021 (users are not satisfied while using stackoverflow)
with combine as
(
select id, creation_date, owner_user_id, 'answers' type
from `bigquery-public-data.stackoverflow.posts_answers`
where extract(year from creation_date) in (2020,2021)
union distinct
select id, creation_date, owner_user_id, 'questions' type
from `bigquery-public-data.stackoverflow.posts_questions`
where extract(year from creation_date) in (2020,2021)
),
obs as
(
select date(date_trunc(creation_date, MONTH)) month_post,
count(case when type='answers' then id end) total_answers,
count(distinct case when type='answers' then owner_user_id end) total_users_answer,
count(case when type='questions' then id end) total_question,
count(distinct case when type='questions' then owner_user_id end) total_users_question
from combine
group by 1
)
select *
from obs
order by month_post
;
